package tail

func isLocalFS(magic int64) bool {
	switch magic {
	case S_MAGIC_AAFS:
		return true
	case S_MAGIC_ACFS:
		return false
	case S_MAGIC_ADFS:
		return true
	case S_MAGIC_AFFS:
		return true
	case S_MAGIC_AFS:
		return false
	case S_MAGIC_ANON_INODE_FS:
		return true
	case S_MAGIC_APFS:
		return true
	case S_MAGIC_AUFS:
		return false
	case S_MAGIC_AUTOFS:
		return true
	case S_MAGIC_BALLOON_KVM:
		return true
	case S_MAGIC_BEFS:
		return true
	case S_MAGIC_BDEVFS:
		return true
	case S_MAGIC_BFS:
		return true
	case S_MAGIC_BPF_FS:
		return true
	case S_MAGIC_BINFMTFS:
		return true
	case S_MAGIC_BTRFS:
		return true
	case S_MAGIC_BTRFS_TEST:
		return true
	case S_MAGIC_CEPH:
		return false
	case S_MAGIC_CGROUP:
		return true
	case S_MAGIC_CGROUP2:
		return true
	case S_MAGIC_CIFS:
		return false
	case S_MAGIC_CODA:
		return false
	case S_MAGIC_COH:
		return true
	case S_MAGIC_CONFIGFS:
		return true
	case S_MAGIC_CRAMFS:
		return true
	case S_MAGIC_CRAMFS_WEND:
		return true
	case S_MAGIC_DAXFS:
		return true
	case S_MAGIC_DEBUGFS:
		return true
	case S_MAGIC_DEVFS:
		return true
	case S_MAGIC_DEVPTS:
		return true
	case S_MAGIC_ECRYPTFS:
		return true
	case S_MAGIC_EFIVARFS:
		return true
	case S_MAGIC_EFS:
		return true
	case S_MAGIC_EXOFS:
		return true
	case S_MAGIC_EXT:
		return true
	case S_MAGIC_EXT2:
		return true
	case S_MAGIC_EXT2_OLD:
		return true
	case S_MAGIC_F2FS:
		return true
	case S_MAGIC_FAT:
		return true
	case S_MAGIC_FHGFS:
		return false
	case S_MAGIC_FUSEBLK:
		return false
	case S_MAGIC_FUSECTL:
		return false
	case S_MAGIC_FUTEXFS:
		return true
	case S_MAGIC_GFS:
		return false
	case S_MAGIC_GPFS:
		return false
	case S_MAGIC_HFS:
		return true
	case S_MAGIC_HFS_PLUS:
		return true
	case S_MAGIC_HFS_X:
		return true
	case S_MAGIC_HOSTFS:
		return true
	case S_MAGIC_HPFS:
		return true
	case S_MAGIC_HUGETLBFS:
		return true
	case S_MAGIC_MTD_INODE_FS:
		return true
	case S_MAGIC_IBRIX:
		return false
	case S_MAGIC_INOTIFYFS:
		return true
	case S_MAGIC_ISOFS:
		return true
	case S_MAGIC_ISOFS_R_WIN:
		return true
	case S_MAGIC_ISOFS_WIN:
		return true
	case S_MAGIC_JFFS:
		return true
	case S_MAGIC_JFFS2:
		return true
	case S_MAGIC_JFS:
		return true
	case S_MAGIC_KAFS:
		return false
	case S_MAGIC_LOGFS:
		return true
	case S_MAGIC_LUSTRE:
		return false
	case S_MAGIC_M1FS:
		return true
	case S_MAGIC_MINIX:
		return true
	case S_MAGIC_MINIX_30:
		return true
	case S_MAGIC_MINIX_V2:
		return true
	case S_MAGIC_MINIX_V2_30:
		return true
	case S_MAGIC_MINIX_V3:
		return true
	case S_MAGIC_MQUEUE:
		return true
	case S_MAGIC_MSDOS:
		return true
	case S_MAGIC_NCP:
		return false
	case S_MAGIC_NFS:
		return false
	case S_MAGIC_NFSD:
		return false
	case S_MAGIC_NILFS:
		return true
	case S_MAGIC_NSFS:
		return true
	case S_MAGIC_NTFS:
		return true
	case S_MAGIC_OPENPROM:
		return true
	case S_MAGIC_OCFS2:
		return false
	case S_MAGIC_OVERLAYFS:
		return false
	case S_MAGIC_PANFS:
		return false
	case S_MAGIC_PIPEFS:
		return false
	case S_MAGIC_PRL_FS:
		return false
	case S_MAGIC_PROC:
		return true
	case S_MAGIC_PSTOREFS:
		return true
	case S_MAGIC_QNX4:
		return true
	case S_MAGIC_QNX6:
		return true
	case S_MAGIC_RAMFS:
		return true
	case S_MAGIC_RDTGROUP:
		return true
	case S_MAGIC_REISERFS:
		return true
	case S_MAGIC_ROMFS:
		return true
	case S_MAGIC_RPC_PIPEFS:
		return true
	case S_MAGIC_SECURITYFS:
		return true
	case S_MAGIC_SELINUX:
		return true
	case S_MAGIC_SMACK:
		return true
	case S_MAGIC_SMB:
		return false
	case S_MAGIC_SMB2:
		return false
	case S_MAGIC_SNFS:
		return false
	case S_MAGIC_SOCKFS:
		return true
	case S_MAGIC_SQUASHFS:
		return true
	case S_MAGIC_SYSFS:
		return true
	case S_MAGIC_SYSV2:
		return true
	case S_MAGIC_SYSV4:
		return true
	case S_MAGIC_TMPFS:
		return true
	case S_MAGIC_TRACEFS:
		return true
	case S_MAGIC_UBIFS:
		return true
	case S_MAGIC_UDF:
		return true
	case S_MAGIC_UFS:
		return true
	case S_MAGIC_UFS_BYTESWAPPED:
		return true
	case S_MAGIC_USBDEVFS:
		return true
	case S_MAGIC_V9FS:
		return true
	case S_MAGIC_VMHGFS:
		return false
	case S_MAGIC_VXFS:
		return false
	case S_MAGIC_VZFS:
		return true
	case S_MAGIC_WSLFS:
		return true
	case S_MAGIC_XENFS:
		return true
	case S_MAGIC_XENIX:
		return true
	case S_MAGIC_XFS:
		return true
	case S_MAGIC_XIAFS:
		return true
	case S_MAGIC_ZFS:
		return true
	case S_MAGIC_ZSMALLOC:
		return true
	default:
		//fmt.Fprintln(os.Stderr, "default case", magic)
		return false
	}
}
